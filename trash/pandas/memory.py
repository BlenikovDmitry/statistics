import pandas as pd
import gc

'''
пример того, как преобразовывать типы данных для оптимизации использования памяти
также пример вызова сборщика мусора
'''


#считываем сырые данные
ofz = pd.read_csv('ofz_cleared.csv', encoding = 'Windows-1251')

print(ofz.dtypes)
print('Использование памяти: ' + str(ofz.memory_usage().sum()))
#преобразуем тип object в питоновскую строку, но в этом нет особого смысла,
#так как памяти они занимают одинаково
ofz['Наименование'] = ofz['Наименование'].astype('string')

ofz['Сделок шт.'] = ofz['Сделок шт.'].astype('int16')
ofz['Цена % средневзвешенная'] = ofz['Цена % средневзвешенная'].astype('float16')
ofz['Дох посл сделки'] = ofz['Дох посл сделки'].astype('float16')
ofz['Ставка купона'] = ofz['Ставка купона'].astype('float16')


print(ofz.dtypes)
print('Использование памяти: ' + str(ofz.memory_usage().sum()))

ofz.to_csv('1.csv', encoding = 'Windows-1251')
#удаляем ссылку на кадр данных
del ofz
#вывод приведет к ошибке, так как объект в памяти есть, а ссылки на него нет
#print(ofz)
#запускаем сборщик мусора для освобождения памяти
gc.collect()

'''
просто для запоминания
питон хранит 1 объект и при присваивании создает еще одну
ссылку на объект
полезно знать при управлении памятью, ведь объект не уйдет из
памяти, пока не уйдут все ссылки на него
в примере имеем два объекта
one = 1488, после увеличиваем на 1 и создается еще 1 объект
two  - хранит ссылку на объект 1488, но не на 1489
1489 уйдет из памяти сразу после удаления ссылки one и запуска сборщика мусора
1488 не уйдет, так как на него осталась ссылка two
'''
'''print('//////////////////////////////////')
one = 1488
two = one
one += 1
print(one)
del one
print(two)'''
#еще лучше вариант - конвертирование на этапе считываения - так даже лучше
#так как изначально выделяется памяти столько сколько нужно
types = {'Сделок шт.': 'int32', 'Цена % средневзвешенная': 'float16', 'Дох посл сделки': 'float16','Ставка купона': 'float16'}
#считываем сырые данные снова
ofz = pd.read_csv('ofz_cleared.csv', encoding = 'Windows-1251',dtype = types)
#альтернативный вариант смены типов через словарь
#ofz = ofz.astype({'Сделок шт.': 'int16', 'Цена % средневзвешенная': 'float16', 'Дох посл сделки': 'float16','Ставка купона': 'float16'})
print(ofz.dtypes)
print('Использование памяти: ' + str(ofz.memory_usage().sum()))
