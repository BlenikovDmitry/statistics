В данной папке будут публиковаться актуальные дата сеты, которые я использую в работе.
ВАЖНОЕ ДОПУЩЕНИЕ!
Так как мы точно знаем, что по офз купоны полугодовые, расчет % купона верный.
Но по муниципальным облигациям ОЧЕНЬ РЕДКО, но бывает не 4 раза в год выплана купона, а 2, поэтому с высокой долей вероятности ставка купона по
муниципалкам рассчитана верно, но могут быть ошибки в достоверности
Так как по офз присутствуют выпуски в валюте ,которые были конвертированы в рубли, это следует иметь в виду.

10.04.2024
Обновлены данные по бумагам
Исправлены ошибки в достоверности: отброшены доходности ниже нуля и выше 2-х стандартных отклонений, то же самое сделано с ценами
Добавлен расчет простейших статистик(среднее и стандартное отклонение)
Добавлен расчет общего объема долга, который торговался в данный день
Добавлен расчет НКД по выпускам, торговавшихся в данный день
Добавлены графики:
- график купонной доходности
- график доходности последней сделки
- график цен бумаг
- график распределения купонов по офз и муниципалкам
Графики сохраняются под отдельным именем

17.04.2024
Обновлены данные по бумагам
Протестирован функционал, для понятности добавлены единицы измерения в вывод статистики
Найдена ошибка: нкд не посчитать по объему в валюте, потому как указан объем торгов, а нужен объем размещения, которого нет
и не будет в сырых данных. Заменено на объем торгов в рублях

18.04.2024
Статистика по датам пишется в файлы result_muni.csv и result_ofz.csv

26.04.2024
Написан движок генерации html(файл html_engine)
Сделана группировка выпусков по цене, купонной доходности, дате погашения, ликвидности(по объему торгов) с отрисовкой графиков

30.04.2024
Переопределены файлы генерации html отдельно для офз и муниципалок(файлы generator_ofz и generator_muni)
Настроена генерация отчета html для офз и муниципалок(example.html общий...пока что)

08.05.2024
написан скрипт выбора самых дешевых облигаций офз

06.06.2024
рефакторинг кода в файле cheapest_ofz.py, 
добавлен анализ самых доходных по купону бумаг
результаты разнесены по файлам cheapest_bonds_out.csv(дешевки) и max_kupon_bonds_out.csv(доходные по купону)
добавлен файл config для суммы вложений и числа выводимых выпусков

07.06.2024
добавлен отсортированный график доходности последней сделки
генерация идет в папку result

25.02.2025
добавлена генерация главной страницы сайта с отчетами
переписаны скрипты очистки данных офз, генерации страницы отчета офз, добавлен код в движок генератора html

28.02.2025
переписан код генерации блока ежедневных отчетов, чтобы ссылки туда тянулись автоматически(читались из директории)
переписан код html страницы для более дружественного дизайна, исправлена проблема поехавших блоков
написана статичная страницы архива, настроены ссылки.

04.03.2025
выложено на хостинг
улучшен дизайн страницы
убрано из генерации отчетов общая таблица офз из - за бага с позиционированием

05.03.2025
кастомизация ссылок для красоты на главной странице(но пока не залито в прод)

17.03.2025
добавилено скачивание графиков с главной страницы сайта
добавлено в отчет скачивание отчета по датам с сайта и графиков
срастил стиль главной страницы и стиль ежедневного отчета

02.04.2025
переписал алгоритм подсчета метрик на главной странице(цена, купон, объем торгов)
раньше бралось среднее от среднего, что плохо. теперь берется последнее наблюдение.

03.04.2025
переписал движок уйдя от юпитер лаба, + оптимизировал сам движок

05.04.2025
протестировал движок на исторических данных. все работает.

11.05.2025 
из - за бага убрал в файле new_engine.py проверку на 2 стандартных отклонения
07.05 из - за этого генерировались неправильные данные, так как было много бумаг с доходностью сделки 0 и это исказило ст отклонение и отбросило много нужных бумаг

19.05.2025
в файле new_engine.py вернул проверку на 4 стандартных отклонения.
причина - стали попадать совсем уж дикие варианты офз, которые портили общую картину


Планы на ближайщее будущее:
!!! переписать подсчет ставки купона исходя из объема размещения каждого выпуска
1) страница о владельце ресурса,  
2) добавить в движок парсинг сайта ммвб
3) добавить возможность подтягивать с сайта ммвб данные сразу за произвольный период и вызывать перестроение страниц
4) добавить на страницы возможность быстро попасть наверх страницы
5) написать скрипт, который собирает данные из всех папок, собирает все бумаги, анализирует данные каждой и строит график в динамике.
создать отдельную страницу, где разместим анализ бумаг
6) написать скрипт, который построит графики за каждый отдельно взятый месяц. создать отдельную страницу а архиве рядом с заголовком месяца и назвать "динамика"
точнее ссылку на график

*) нарисовать диаграммы использования и схему файлов, алгоритмы генерации файлов, чт за что отвечает для документации

